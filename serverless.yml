service: website-views-service

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  environment:
    VIEWS_TABLE: "views-${self:service}-${opt:stage, self:provider.stage}"
    USER_TABLE: "user-${self:service}-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

functions:
  incrementViews:
    handler: api/views.increment
    memorySize: 128
    description: Increment view count
    events:
      - http: 
          path: views
          method: post

  listViews:
    handler: api/views.list
    memorySize: 128
    description: List all page views
    events:
      - http: 
          path: candidates
          method: get
  
  submitUser:
    handler: api/users.submit
    memorySize: 128
    description: Submit new user
    events:
      - http: 
          path: users
          method: post

  usersDetails:
    handler: api/users.get
    memorySize: 128
    description: Get user details
    events:
      - http:
          path: users/{id}
          method: get
  
resources:
  Resources:
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.CANDIDATE_TABLE}